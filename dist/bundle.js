(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>i});var o=t(354),r=t.n(o),d=t(314),c=t.n(d)()(r());c.push([n.id,'/* Reset default styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f0f0f0;\n}\n\n.main_container {\n  display: flex;\n  justify-content: space-between;\n  margin: 20px auto;\n  max-width: 1200px;\n}\n\n.container_left,\n.container_right {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  font-size: 28px;\n  margin-bottom: 30px;\n}\n\n.projects,\n.todos {\n  margin-top: 30px;\n}\n\n.projectinput {\n  width: calc(100% - 20px);\n  padding: 12px;\n  margin-bottom: 20px;\n  border: 2px solid #ccc;\n  border-radius: 8px;\n}\n\n.submitbutton,\n.todo_buttons {\n  padding: 12px 24px;\n  font-size: 18px;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.submitbutton:hover,\n.todo_buttons:hover {\n  background-color: #45a049;\n}\n\n.projecttab,\n.todotab {\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.projectclick {\n  cursor: pointer;\n}\n\n.selected {\n  /* Add styling for selected project tabs here */\n  background-color: red; /* Light gray background */\n  border: 2px solid #00bcd4; /* Light blue border */\n  border-radius: 5px; /* Rounded corners */\n}\n\n.deletebuttonpj,\n.deletebutton {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  padding: 12px 24px;\n}\n\n.deletebuttonpj:hover,\n.deletebutton:hover {\n  background-color: #d32f2f;\n}\n\n.todo-form {\n  border: 2px solid red;\n  margin: 30px 0;\n  padding: 20px;\n}\n\n.todo-form input[type="text"],\n.todo-form input[type="date"],\n.todo-form input[type="number"],\n.todo-form button[type="submit"] {\n  display: block;\n  width: calc(100% - 24px);\n  padding: 12px;\n  margin-bottom: 20px;\n  border: 2px solid #ccc;\n  border-radius: 8px;\n}\n\n.todo-form button[type="submit"] {\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.todo-form button[type="submit"]:hover {\n  background-color: #45a049;\n}\n\n.edit-form {\n  border: 2px solid blue;\n  margin: 30px 0;\n  padding: 20px;\n}\n\n.container_left {\n  width: 30%;\n}\n\n.container_right {\n  width: 70%;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,yBAAyB;AACzB;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,8BAA8B;EAC9B,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;;EAEE,sBAAsB;EACtB,aAAa;EACb,mBAAmB;EACnB,uCAAuC;AACzC;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,wBAAwB;EACxB,aAAa;EACb,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;EAClB,eAAe;EACf,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;;EAEE,yBAAyB;AAC3B;;AAEA;;EAEE,mBAAmB;EACnB,aAAa;EACb,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,+CAA+C;EAC/C,qBAAqB,EAAE,0BAA0B;EACjD,yBAAyB,EAAE,sBAAsB;EACjD,kBAAkB,EAAE,oBAAoB;AAC1C;;AAEA;;EAEE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,kBAAkB;AACpB;;AAEA;;EAEE,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;EACrB,cAAc;EACd,aAAa;AACf;;AAEA;;;;EAIE,cAAc;EACd,wBAAwB;EACxB,aAAa;EACb,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;EACtB,cAAc;EACd,aAAa;AACf;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ",sourcesContent:['/* Reset default styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f0f0f0;\n}\n\n.main_container {\n  display: flex;\n  justify-content: space-between;\n  margin: 20px auto;\n  max-width: 1200px;\n}\n\n.container_left,\n.container_right {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  font-size: 28px;\n  margin-bottom: 30px;\n}\n\n.projects,\n.todos {\n  margin-top: 30px;\n}\n\n.projectinput {\n  width: calc(100% - 20px);\n  padding: 12px;\n  margin-bottom: 20px;\n  border: 2px solid #ccc;\n  border-radius: 8px;\n}\n\n.submitbutton,\n.todo_buttons {\n  padding: 12px 24px;\n  font-size: 18px;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.submitbutton:hover,\n.todo_buttons:hover {\n  background-color: #45a049;\n}\n\n.projecttab,\n.todotab {\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.projectclick {\n  cursor: pointer;\n}\n\n.selected {\n  /* Add styling for selected project tabs here */\n  background-color: red; /* Light gray background */\n  border: 2px solid #00bcd4; /* Light blue border */\n  border-radius: 5px; /* Rounded corners */\n}\n\n.deletebuttonpj,\n.deletebutton {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  padding: 12px 24px;\n}\n\n.deletebuttonpj:hover,\n.deletebutton:hover {\n  background-color: #d32f2f;\n}\n\n.todo-form {\n  border: 2px solid red;\n  margin: 30px 0;\n  padding: 20px;\n}\n\n.todo-form input[type="text"],\n.todo-form input[type="date"],\n.todo-form input[type="number"],\n.todo-form button[type="submit"] {\n  display: block;\n  width: calc(100% - 24px);\n  padding: 12px;\n  margin-bottom: 20px;\n  border: 2px solid #ccc;\n  border-radius: 8px;\n}\n\n.todo-form button[type="submit"] {\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.todo-form button[type="submit"]:hover {\n  background-color: #45a049;\n}\n\n.edit-form {\n  border: 2px solid blue;\n  margin: 30px 0;\n  padding: 20px;\n}\n\n.container_left {\n  width: 30%;\n}\n\n.container_right {\n  width: 70%;\n}\n'],sourceRoot:""}]);const i=c},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,d){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(c[a]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&c[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */");return[e].concat([d]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var d={},c=[],i=0;i<n.length;i++){var a=n[i],s=o.base?a[0]+o.base:a[0],l=d[s]||0,p="".concat(s," ").concat(l);d[s]=l+1;var A=t(p),u={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:p,updater:m,references:1})}c.push(p)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var d=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<d.length;c++){var i=t(d[c]);e[i].references--}for(var a=o(n,r),s=0;s<d.length;s++){var l=t(d[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}d=a}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var d=e[o]={id:o,exports:{}};return n[o](d,d.exports,t),d.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),d=t(659),c=t.n(d),i=t(56),a=t.n(i),s=t(540),l=t.n(s),p=t(113),A=t.n(p),u=t(208),m={};m.styleTagTransform=A(),m.setAttributes=a(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.A,m),u.A&&u.A.locals&&u.A.locals;const f=class{constructor(n){this.name=n,this.todos=[]}addtodo(n){this.todos.push(n)}removetodo(n){this.todos=this.todos.filter((e=>e!==n))}},b=class{constructor(n,e,t,o){this.title=n,this.description=e,this.duedate=t,this.priority=o}editodo(n,e,t,o){this.title=n,this.description=e,this.duedate=t,this.priority=o}};let E;console.log("Hello Worlddd");const C=[],h=document.querySelector(".projects"),x=document.querySelector(".projectinput"),B=document.querySelector(".submitbutton"),y=document.querySelector(".todo_buttons"),g=document.querySelector(".todos");function v(){h.innerHTML="",C.forEach((n=>{const e=document.createElement("div");e.classList.add("projecttab");const t=document.createElement("h2");t.classList.add("projectclick"),t.textContent=n.name,t.addEventListener("click",(()=>{const n=document.querySelector(".selected");n&&n.classList.remove("selected"),t.classList.add("selected")}));const o=document.createElement("button");o.textContent="DELETE",o.addEventListener("click",(()=>{w(n)})),e.appendChild(t),e.appendChild(o),h.appendChild(e)})),L()}function k(){localStorage.setItem("projects",JSON.stringify(C))}function j(n){if(n){if(C.find((e=>e.name===n)))return void alert("A project with this name already exists. Please choose a different name.");const e=document.createElement("div");e.classList.add("projecttab"),h.appendChild(e);const t=new f(n);C.push(t),console.log("New Project:",t);const o=document.createElement("h2");o.classList.add("projectclick","selected"),o.textContent=n;const r=document.createElement("button");r.textContent="DELETE",r.addEventListener("click",(()=>{w(f)})),e.appendChild(o),e.appendChild(r),document.querySelectorAll(".projectclick").forEach((n=>n.classList.remove("selected"))),o.classList.add("selected"),E=t,console.log("Current Project:",E),L(),k(),v()}}function w(n){const e=C.indexOf(n);-1!==e&&(C.splice(e,1),g.innerHTML="",v(),k())}function L(){document.querySelectorAll(".projectclick").forEach((n=>{n.addEventListener("click",(()=>{const e=n.textContent;E=C.find((n=>n.name===e)),console.log("Current Project:",E),S(E)}))}))}function S(n){g.innerHTML="",n.todos.forEach((n=>{T(n)}))}function T(n){const e=document.createElement("div");e.classList.add("todotab");const t=document.createElement("label");t.textContent="Title:",t.style.fontWeight="bold";const o=document.createElement("div");o.textContent=n.title;const r=document.createElement("label");r.textContent="Description:",r.style.fontWeight="bold";const d=document.createElement("div");d.textContent=n.description;const c=document.createElement("label");c.textContent="Due Date:",c.style.fontWeight="bold";const i=document.createElement("div");i.textContent=n.duedate;const a=document.createElement("label");a.textContent="Priority:",a.style.fontWeight="bold";const s=document.createElement("div");s.textContent=n.priority;const l=document.createElement("button");l.textContent="edit",l.addEventListener("click",(()=>{!function(n){const e=document.createElement("form");e.classList.add("edit-form");const t=document.createElement("label");t.textContent="Title:";const o=document.createElement("input");o.type="text",o.value=n.title,e.appendChild(t),e.appendChild(o);const r=document.createElement("label");r.textContent="Description:";const d=document.createElement("input");d.type="text",d.value=n.description,e.appendChild(r),e.appendChild(d);const c=document.createElement("label");c.textContent="Due Date:";const i=document.createElement("input");i.type="date",i.value=n.duedate,e.appendChild(c),e.appendChild(i);const a=document.createElement("label");a.textContent="Priority:";const s=document.createElement("input");s.type="number",s.value=n.priority,e.appendChild(a),e.appendChild(s);const l=document.createElement("button");l.textContent="Update",l.addEventListener("click",(t=>{t.preventDefault(),n.title=o.value,n.description=d.value,n.duedate=i.value,n.priority=s.value,S(E),e.remove(),k()})),e.appendChild(l),g.appendChild(e)}(n)}));const p=document.createElement("button");p.textContent="delete",p.addEventListener("click",(()=>{!function(n){const e=E.todos.indexOf(n);-1!==e&&(E.todos.splice(e,1),S(E),k())}(n)})),e.appendChild(t),e.appendChild(o),e.appendChild(r),e.appendChild(d),e.appendChild(c),e.appendChild(i),e.appendChild(a),e.appendChild(s),e.appendChild(l),e.appendChild(p),g.insertBefore(e,g.firstChild)}!function(){try{const n=localStorage.getItem("projects");if(n)JSON.parse(n).forEach((n=>{const e=new f(n.name);n.todos.forEach((n=>{const t=new b(n.title,n.description,n.duedate,n.priority);e.addtodo(t)})),C.push(e)}));else{j("test");const n=C.find((n=>"test"===n.name));if(n){const e=new b("Dummy Todo 1","Description for Dummy Todo 1","2024-04-15",1),t=new b("Dummy Todo 2","Description for Dummy Todo 2","2024-04-16",2);n.addtodo(e),n.addtodo(t)}}}catch(n){console.error("Error loading projects from localStorage:",n)}}(),v(),y.addEventListener("click",(function(){if(console.log("Function createtodoform is called."),!document.querySelector(".todo-form")){console.log("Function entes the if barrier");const n=document.createElement("form");n.classList.add("todo-form"),g.insertBefore(n,g.firstChild),n.style.border="2px solid red",n.style.margin="20px";const e=document.createElement("input");e.type="text",e.placeholder="todo title",n.appendChild(e);const t=document.createElement("input");t.type="text",t.placeholder="todo desc",n.appendChild(t);const o=document.createElement("input");o.type="date",n.appendChild(o);const r=document.createElement("input");r.type="number",r.placeholder="todo priority",n.appendChild(r);const d=document.createElement("button");d.type="submit",d.textContent="SUBMIT todo",n.appendChild(d),n.addEventListener("submit",(d=>{d.preventDefault();const c=e.value.trim(),i=t.value.trim(),a=o.value.trim(),s=r.value.trim();if(c&&i&&a&&s){const e=new b(c,i,a,s);E.addtodo(e),T(e),n.remove(),k()}else alert("Please fill all fields")}))}})),console.log(y),B.addEventListener("click",(()=>{j(x.value.trim())})),L()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,